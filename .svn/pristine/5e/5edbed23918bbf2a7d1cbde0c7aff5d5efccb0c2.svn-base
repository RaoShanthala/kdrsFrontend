<template>
  <div>
    <h1>新規登録画面</h1>
    
    <b-card bg-variant="light">
      <b-form>
        <!--div class="form-row">
    <div class="col-md-4 mb-3">
      <label for="validationCustom01">工事コード</label>
      <input type="text" class="form-control" id="validationCustom01" placeholder="工事コード" required>
      <div class="valid-feedback">
        Looks good!
      </div>
    </div>
    <div class="col-md-4 mb-3">
      <label for="validationCustom02">Last name</label>
      <input type="text" class="form-control" id="validationCustom02" placeholder="Last name" value="Otto" required>
      <div class="valid-feedback">
        Looks good!
      </div>
    </div>
    <div class="col-md-4 mb-3">
      <label for="validationCustomUsername">Username</label>
      <div class="input-group">
          
        <div class="input-group-prepend">
          <span class="input-group-text" id="inputGroupPrepend">@</span>
        </div>
        <input type="text" class="form-control" id="validationCustomUsername" placeholder="Username" aria-describedby="inputGroupPrepend" required>
        <div class="invalid-feedback">
          Please choose a username.
        </div>
      </div>
    </div>
     v-bind:class="{ 'form-control': true, 'is-invalid': valid }"
  </div -->

        <b-container>
           <br />
          <b-form-row>
            <b-col class="col-md-5">
              <b-form-group label="工事コード" label-for="input-proj-code" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-proj-code" v-model="view.projCode"></b-form-input>
              <div><p style="color: #ff0000;" id="projCodeError"></p> </div>
              </b-form-group>
            </b-col>
              <b-col class="col-md-5"> <b-form-group label="工事名称" label-for="input-proj-name" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-proj-name" v-model="view.projName"></b-form-input>
              <div><p style="color: #ff0000;" id="projNameError"></p> </div>
              </b-form-group>
            </b-col>
          </b-form-row>
          <br />
          <b-form-row>
            <b-col class="col-md-5">
              <b-form-group label="数量" label-for="input-quantity" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-quantity" v-model="view.quantity"></b-form-input>
              </b-form-group>
            </b-col>
            <b-col class="col-md-5">
              <b-form-group label="開始数量" label-for="input-start-quantity" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-start-quantity" v-model="view.startQuantity"></b-form-input>
              </b-form-group>
            </b-col>
          </b-form-row>
          <b-form-row>
            <b-col class="col-md-5">
            </b-col>
            <b-col class="col-md-5">
              <b-form-group label="完了数量" label-for="input-end-quantity" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-end-quantity" v-model="view.endQuantity"></b-form-input>
              </b-form-group>
            </b-col>
          </b-form-row>
          <b-form-row>
            <b-col class="col-md-5">
            </b-col>
            <b-col class="col-md-5">
              <b-form-group label="中止・不良数量" label-for="input-abort-quantity" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-abort-quantity" v-model="view.abortQuantity"></b-form-input>
              </b-form-group>
            </b-col>
          </b-form-row>
          <b-form-row>
            <b-col class="col-md-5">
              <b-form-group label="着手予定日" label-for="input-start-plan-date" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-date-start" type="date" v-model="view.startPlanDate" max="9999-12-31"></b-form-input>
              </b-form-group>
            </b-col>
             <b-col class="col-md-5">
              <b-form-group label="着手日" label-for="input-start-date" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-start-date" type="date" v-model="view.startDate" max="9999-12-31"></b-form-input>
              </b-form-group>
            </b-col>
          </b-form-row> 
           <br />
          <b-form-row>
            <b-col class="col-md-5">
              <b-form-group label="完了予定日" label-for="input-end-plan-date" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-end-plan-date" type="date" v-model="view.endPlanDate" max="9999-12-31"></b-form-input>
              </b-form-group>
            </b-col>
             <b-col class="col-md-5">
              <b-form-group label="完了日" label-for="input-end-date" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-end-date" type="date" v-model="view.endDate" max="9999-12-31"></b-form-input>
              </b-form-group>
            </b-col>
          </b-form-row>
           <br />
          <b-form-row>
            <b-col class="col-md-5">
              <b-form-group label="納品予定日" label-for="input-deli-plan-date" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-deli-plan-date" type="date" v-model="view.deliPlanDate" max="9999-12-31"></b-form-input>
              </b-form-group>
            </b-col>
            <b-col class="col-md-5">
              <b-form-group label="納品日" label-for="input-deli-date" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-deli-date" type="date" v-model="view.deliDate" max="9999-12-31"></b-form-input>
              </b-form-group>
            </b-col>
          </b-form-row>
          <br />
        
         
          <b-form-row>
            <b-col class="col-md-5">
              <b-form-group label="取引先ID" label-for="input-cust-id" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-cust-id" v-model="view.custId"></b-form-input>
              </b-form-group>
            </b-col>
            <b-col class="col-md-5">
              <b-form-group label="取込NO" label-for="input-import-no" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-import-no" v-model="view.importNo"></b-form-input>
              </b-form-group>
            </b-col>
            <b-col class="col-md-5">
              <b-form-group label="最大製品ID" label-for="input-max-prod-id" label-cols-sm="3" label-align-sm="right">
              <b-form-input id="input-max-prod-id" v-model="view.maxProdId"></b-form-input>
              </b-form-group>
            </b-col>
          </b-form-row>
        </b-container>
      </b-form>
    </b-card>

    <b-alert v-if="message" show variant="danger">{{ message }}</b-alert>

    <div class="text-right mt-1">
      <b-button @click="registerProject" class="mr-1">登録</b-button>
      <b-button to="/projects" class="mr-1">戻る</b-button>
    </div>
  </div>
</template>

<script>
import axios from "axios";
import apiUrls from "../common/apiUrls";

 export default {
  data() {
    return {
      message: "",
      text: "",
      projCodePresent:true,
      projNamePresent:true,
      view: {
        projCode: "",
        projName: "",
        custId: "",   
        quantity: "",
        startQuantity: "",
        endQuantity: "",
        abortQuantity: "",
        startPlanDate: "",
        endPlanDate: "",
        deliPlanDate: "",
        startDate: "",
        endDate: "",
        deliDate: "",
        importNo: "",
        maxProdId: "",
      },
    };
  },
  /* validations: {
    form: {
      projCode: {
        required
      },
      projName: {
        required,
        minLength: minLength(3)
      }
    }
  }, */

  /*created() {
    this.view.startDate = this.getNow();
  },*/
  methods: {
      
    getNow() {
      let today = new Date(Date.now());
      return today.toISOString().slice(0, 10);
    },

    checkInput() {
      if (!this.view.projCode) {
        this.text = "Please enter projCode";
        this.projCodePresent = false;
      } else{
        this.text = "";
        this.projCodePresent = true; 
      }
      document.getElementById("projCodeError").innerHTML = this.text;
      if (!this.view.projName) {
        this.text = "Please enter projName";
        this.projNamePresent == false;
      }else{
        this.text = "";
        this.projNamePresent == true; 
      } 
      document.getElementById("projNameError").innerHTML = this.text;
    },

    registerProject() {
      this.message = "";
      if (confirm("登録しますか？")) {
        this.checkInput();
        if (this.projCodePresent == true && this.projNamePresent == true){
        //基本リクエストを作成する
        let payload = {
          transId: "",
          resultCode: null,
          resultMessage: null,
          user: null,
          terminal: null,
          reqDateTime: null,
          resDateTime: null,
          reqHd: {
            projCode: this.view.projCode,
            projName: this.view.projName,
            custId: this.view.custId,
            quantity: this.view.quantity,
            startQuantity: this.view.startQuantity,
            endQuantity: this.view.endQuantity,
            abortQuantity: this.view.abortQuantity,
            startPlanDate: this.view.startPlanDate,
            endPlanDate: this.view.endPlanDate,
            deliPlanDate: this.view.deliPlanDate,
            startDate: this.view.startDate,
            endDate: this.view.endDate,
            deliDate: this.view.deliDate,
            importNo: this.view.importNo,
            maxProdId: this.view.maxProdId,
          },
        };
      
        let axiosConfigObject = {
          headers: {
            Authorization: "Bearer " + this.$store.state.loginData.accessToken,
            "Content-Type": "application/json",
          },
        };
        axios
          .post(apiUrls.registerProject, payload, axiosConfigObject)
          .then((response) => {
            if (response.data.resultCode != "000") {
              this.message = response.data.resultMessage;
            } else {
              alert(response.data.resultMessage);
              this.$store.state.responseData = "";
              this.$router.push("projects");
            }
          })
          .catch((error) => {
            this.message = (error.response || {}).data;
            console.log((error.response || {}).data);
          });
        }  
      }
    },
  },
};
</script>